trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: InstallPython
  displayName: 'Install Python'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

- job: Build
  displayName: 'Build stage'
  dependsOn: InstallPython
  steps:
  - checkout: self
  - script: |
      sudo apt-get update
      sudo apt-get install python3-venv 
      python -m venv env
      source env/bin/activate
      pip install flask
      pip install pymongo requests
    displayName: 'Install dependencies'

  - script: |
      # Run the app.py code
      pip install flask
      pip install pymongo requests
      python app.py &
      sleep 5  # Wait for server to start
    displayName: 'Run app.py code'

- job: Test
  displayName: 'Test stage'
  dependsOn: Build
  steps:
  - checkout: self
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - script: |
      source env/bin/activate
      pip install flask
      pip install pymongo
      pip install pytest requests
      python -m venv env
      source env/bin/activate
     
      echo > __init__.py


      pytest test/* --junitxml=test-results.xml

    displayName: 'Run tests'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/pytest-results.xml'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact with test results'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'sample-1'
      publishLocation: 'Container'
      MaxArtifactSize: 10

- job: Deploy
  displayName: 'Deploy'
  dependsOn: Test
  steps:
  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'aks-service-connection'
      appType: 'webAppLinux'
      appName: 'c2swebapp02'
      package: '$(Pipeline.Workspace)/**/*.zip'
      runtimeStack: 'PYTHON|3.10'
